[{"content":"Obsidian → Hugo → GitHub → Hostinger Automation Workflow This post documents the full setup of my static site publishing pipeline that automates taking blog posts from Obsidian, rendering them with Hugo, pushing the output to GitHub, and then having Hostinger automatically update my website via webhook.\nTools Used Obsidian – Markdown note-taking and blog writing Hugo – Static site generator using the PaperMod theme Hugo PaperMod Wiki My Hugo yaml File GitHub – Repository with two branches: master → Hugo project \u0026amp; content hostinger → Static site output Hostinger – Web hosting platform with webhook integration Python – Automation script for content syncing and site deployment My Automation Script 📁 Folder Structure 📂 Local_Obsidian_Vault/ └── my-home-lab-journey/ ├── post-1/ └── index.md ├── post-2/ └── index.md ├── post-3/ └── index.md └── ... 📂 tillynetblog/ ├── hugo.yaml ├── content/ │ └── my-home-lab-journey/ ├── public/ ├── themes/ │ └── PaperMod/ └── static/ └── images └── css/custom.css What the Automation Script Does Imports import os import shutil import subprocess import re os: for filesystem operations like path handling shutil: for copying/removing files and directories subprocess: for running shell commands like hugo and git re: for finding image links in markdown via regular expressions Configuration obsidian_dir = r\u0026#34;C:\\Users\\micha\\Documents\\Local_Obsidian_Vault\\my-home-lab-journey\u0026#34; hugo_root_dir = r\u0026#34;C:\\Users\\micha\\Documents\\tillynetblog\u0026#34; hugo_content_dir = os.path.join(hugo_root_dir, \u0026#34;content\u0026#34;, \u0026#34;my-home-lab-journey\u0026#34;) attachments_dir = r\u0026#34;C:\\Users\\micha\\Documents\\Local_Obsidian_Vault\\assets\\images\u0026#34; static_images_dir = os.path.join(hugo_root_dir, \u0026#34;static\u0026#34;, \u0026#34;images\u0026#34;) about_src = r\u0026#34;C:\\Users\\micha\\Documents\\Local_Obsidian_Vault\\pages\\about.md\u0026#34; about_dst = os.path.join(hugo_root_dir, \u0026#34;content\u0026#34;, \u0026#34;about.md\u0026#34;) base_url = \u0026#34;https://blog.tillynet.com\u0026#34; Sets paths to: Obsidian content (obsidian_dir) Hugo blog folder Where to copy markdown posts Where Obsidian images are and where to move them Source/destination for the about.md file The blog\u0026rsquo;s base URL for Hugo STEP 1: Copy Markdown Posts if os.path.exists(hugo_content_dir): shutil.rmtree(hugo_content_dir) shutil.copytree(obsidian_dir, hugo_content_dir) print(\u0026#34;✔ Copied markdown posts from Obsidian.\u0026#34;) Deletes existing markdown content in Hugo Copies fresh markdown files from Obsidian Confirms the copy STEP 2: Convert Image Embeds and Copy Images for subdir, _, files in os.walk(hugo_content_dir): for filename in files: if filename.endswith(\u0026#34;.md\u0026#34;): ... iterates through every markdown file in the blog content images = re.findall(r\u0026#39;\\[\\[([^]]*\\.png)\\]\\]\u0026#39;, content) Looks for image link like (example.png) for image in images: markdown_image = f\u0026#34;![Image](/images/{image.replace(\u0026#39; \u0026#39;, \u0026#39;%20\u0026#39;)})\u0026#34; Replaces with standard Markdown image syntax src_image = os.path.join(attachments_dir, image) if os.path.exists(src_image): shutil.copy(src_image, static_images_dir) copies matching images from Obsidian to Hugo\u0026rsquo;s static image folder with open(md_path, \u0026#34;w\u0026#34;, encoding=\u0026#34;utf-8\u0026#34;) as file: file.write(content) Overwrites the file with the updated content print(\u0026#34;✔ Processed images and updated markdown links.\u0026#34;) Confirms processing is complete STEP 3: Copy About Page if os.path.exists(about_src): shutil.copyfile(about_src, about_dst) print(\u0026#34;✔ Updated About page.\u0026#34;) else: print(\u0026#34;⚠ About page not found; skipping.\u0026#34;) Copies about.md from Obsidian to Hugo content Skips and warns if the file is missing STEP 4: Build the Hugo Site subprocess.run([\u0026#34;hugo\u0026#34;, \u0026#34;-b\u0026#34;, base_url], cwd=hugo_root_dir, check=True) print(\u0026#34;✔ Hugo site built with baseURL.\u0026#34;) Builds the site using the hugo command with my specified BaseURL STEP 5: Push Source Files to GitHub master subprocess.run([\u0026#34;git\u0026#34;, \u0026#34;checkout\u0026#34;, \u0026#34;master\u0026#34;], cwd=hugo_root_dir, check=True) subprocess.run([\u0026#34;git\u0026#34;, \u0026#34;add\u0026#34;, \u0026#34;.\u0026#34;], cwd=hugo_root_dir, check=True) subprocess.run([\u0026#34;git\u0026#34;, \u0026#34;commit\u0026#34;, \u0026#34;-m\u0026#34;, \u0026#34;Update blog content\u0026#34;], cwd=hugo_root_dir, check=False) subprocess.run([\u0026#34;git\u0026#34;, \u0026#34;push\u0026#34;, \u0026#34;origin\u0026#34;, \u0026#34;master\u0026#34;], cwd=hugo_root_dir, check=True) print(\u0026#34;✔ Pushed changes to GitHub master.\u0026#34;) Commits and pushes all changes to the master branch STEP 6: Deploy Public Folder to hostinger Branch subprocess.run([\u0026#34;git\u0026#34;, \u0026#34;subtree\u0026#34;, \u0026#34;split\u0026#34;, \u0026#34;--prefix\u0026#34;, \u0026#34;public\u0026#34;, \u0026#34;-b\u0026#34;, \u0026#34;hostinger-deploy\u0026#34;], cwd=hugo_root_dir, check=True) subprocess.run([\u0026#34;git\u0026#34;, \u0026#34;push\u0026#34;, \u0026#34;origin\u0026#34;, \u0026#34;hostinger-deploy:hostinger\u0026#34;, \u0026#34;--force\u0026#34;], cwd=hugo_root_dir, check=True) subprocess.run([\u0026#34;git\u0026#34;, \u0026#34;branch\u0026#34;, \u0026#34;-D\u0026#34;, \u0026#34;hostinger-deploy\u0026#34;], cwd=hugo_root_dir, check=True) print(\u0026#34;✔ Deployed public/ folder to GitHub hostinger branch.\u0026#34;) Splits public/ into a new branch Pushes it forcefully to the hostinger branch on GitHub (used for site deployment) Deletes the temporary hostinger-deploy branch This is necessary for our webhook to recognize the changes Issues I Encountered Website Styling Not Matching Local Preview Problem: Hostinger version didn’t load custom CSS or theme\nFix: Used this build command:\nbash\nCopyEdit\nhugo -D --cleanDestinationDir --themesDir=./themes\nCSS Not Applying on Deployed Site Root Cause: Hostinger was caching fingerprinted CSS\nFix:\nDisabled Hugo asset fingerprinting in hugo.yaml:\nassets: disableFingerprinting: true Verified correct path: assets/css/custom.css\nLessons Learned Static site deployment workflows require full control over content paths and assets\nAsset fingerprinting can break styling if not handled properly\nObsidian\u0026rsquo;s [[embed]] syntax must be converted for Hugo compatibility\nGit subtree pushing keeps deployment clean and isolated to public/\nFinal Outcome End-to-end deployment is fully automated\nBlog posts are written in Obsidian subfolders\nSingle Python script deploys everything to GitHub and Hostinger\nDuplicate post issues and CSS bugs resolved\nDark/light theme and custom styles work across devices\nResume Bullet Built an automated static site deployment pipeline linking Obsidian, Hugo (PaperMod), GitHub, and Hostinger via webhook; resolved CSS asset fingerprinting issues, enabled Hugo theme integration, and automated blog post syncing using Python.\n","permalink":"https://blog.tillynet.com/my-home-lab-journey/building-my-publishing-pipeline-obsidian-hugo-github-hostinger/","summary":"\u003ch1 id=\"obsidian--hugo--github--hostinger-automation-workflow\"\u003eObsidian → Hugo → GitHub → Hostinger Automation Workflow\u003c/h1\u003e\n\u003cp\u003eThis post documents the full setup of my \u003cstrong\u003estatic site publishing pipeline\u003c/strong\u003e that automates taking blog posts from \u003cstrong\u003eObsidian\u003c/strong\u003e, rendering them with \u003cstrong\u003eHugo\u003c/strong\u003e, pushing the output to \u003cstrong\u003eGitHub\u003c/strong\u003e, and then having \u003cstrong\u003eHostinger\u003c/strong\u003e automatically update my website via webhook.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"tools-used\"\u003eTools Used\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eObsidian\u003c/strong\u003e – Markdown note-taking and blog writing\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHugo\u003c/strong\u003e – Static site generator using the \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod\"\u003ePaperMod theme\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/adityatelange/hugo-PaperMod/wiki/Installation\"\u003eHugo PaperMod Wiki\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/michaeltilly/tillynetblog/blob/master/hugo.yaml\"\u003eMy Hugo yaml File\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGitHub\u003c/strong\u003e – Repository with two branches:\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003emaster\u003c/code\u003e → Hugo project \u0026amp; content\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehostinger\u003c/code\u003e → Static site output\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHostinger\u003c/strong\u003e – Web hosting platform with webhook integration\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePython\u003c/strong\u003e – Automation script for content syncing and site deployment \u003ca href=\"https://github.com/michaeltilly/tillynetblog/blob/master/deploy_tillynetblog2.py\"\u003eMy Automation Script\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"-folder-structure\"\u003e📁 Folder Structure\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-plaintext\" data-lang=\"plaintext\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e📂 Local_Obsidian_Vault/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  └── my-home-lab-journey/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      ├── post-1/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t        └── index.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      ├── post-2/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t        └── index.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      ├── post-3/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t        └── index.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      └── ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e📂 tillynetblog/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  ├── hugo.yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  ├── content/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  │   └── my-home-lab-journey/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  ├── public/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  ├── themes/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  │   └── PaperMod/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  └── static/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t  └── images\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      └── css/custom.css\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"what-the-automation-script-does\"\u003eWhat the Automation Script Does\u003c/h2\u003e\n\u003ch3 id=\"imports\"\u003eImports\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eshutil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esubprocess\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ere\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eos\u003c/strong\u003e: for filesystem operations like path handling\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eshutil\u003c/strong\u003e: for copying/removing files and directories\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003esubprocess\u003c/strong\u003e: for running shell commands like \u003ccode\u003ehugo\u003c/code\u003e and \u003ccode\u003egit\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ere\u003c/strong\u003e: for finding image links in markdown via regular expressions\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"configuration\"\u003eConfiguration\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eobsidian_dir\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;C:\\Users\\micha\\Documents\\Local_Obsidian_Vault\\my-home-lab-journey\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;C:\\Users\\micha\\Documents\\tillynetblog\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehugo_content_dir\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;content\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;my-home-lab-journey\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eattachments_dir\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;C:\\Users\\micha\\Documents\\Local_Obsidian_Vault\\assets\\images\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estatic_images_dir\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;static\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;images\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eabout_src\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;C:\\Users\\micha\\Documents\\Local_Obsidian_Vault\\pages\\about.md\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eabout_dst\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;content\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;about.md\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://blog.tillynet.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eSets paths to:\n\u003cul\u003e\n\u003cli\u003eObsidian content (\u003ccode\u003eobsidian_dir\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eHugo blog folder\u003c/li\u003e\n\u003cli\u003eWhere to copy markdown posts\u003c/li\u003e\n\u003cli\u003eWhere Obsidian images are and where to move them\u003c/li\u003e\n\u003cli\u003eSource/destination for the \u003ccode\u003eabout.md\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003eThe blog\u0026rsquo;s base URL for Hugo\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"step-1-copy-markdown-posts\"\u003eSTEP 1: Copy Markdown Posts\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_content_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eshutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ermtree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_content_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eshutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecopytree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobsidian_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehugo_content_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;✔ Copied markdown posts from Obsidian.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eDeletes existing markdown content in Hugo\u003c/li\u003e\n\u003cli\u003eCopies fresh markdown files from Obsidian\u003c/li\u003e\n\u003cli\u003eConfirms the copy\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"step-2-convert-image-embeds-and-copy-images\"\u003eSTEP 2: Convert Image Embeds and Copy Images\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003esubdir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efiles\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_content_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eendswith\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;.md\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eiterates through every markdown file in the blog content\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-pyhton\" data-lang=\"pyhton\"\u003e            images = re.findall(r\u0026#39;\\[\\[([^]]*\\.png)\\]\\]\u0026#39;, content)\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eLooks for image link like (\u003ccode\u003eexample.png\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eimage\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eimages\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003emarkdown_image\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sa\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;![Image](/images/\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;%20\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e)\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eReplaces with standard Markdown image syntax\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003esrc_image\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattachments_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esrc_image\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eshutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esrc_image\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatic_images_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ecopies matching images from Obsidian to Hugo\u0026rsquo;s static image folder\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emd_path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eencoding\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eOverwrites the file with the updated content\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;✔ Processed images and updated markdown links.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eConfirms processing is complete\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"step-3-copy-about-page\"\u003eSTEP 3: Copy About Page\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eabout_src\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eshutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecopyfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eabout_src\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eabout_dst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;✔ Updated About page.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;⚠ About page not found; skipping.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eCopies \u003ccode\u003eabout.md\u003c/code\u003e from Obsidian to Hugo content\u003c/li\u003e\n\u003cli\u003eSkips and warns if the file is missing\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"step-4-build-the-hugo-site\"\u003eSTEP 4: Build the Hugo Site\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;hugo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;-b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;✔ Hugo site built with baseURL.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eBuilds the site using the \u003ccode\u003ehugo\u003c/code\u003e command with my specified \u003ccode\u003eBaseURL\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"step-5-push-source-files-to-github-master\"\u003eSTEP 5: Push Source Files to GitHub \u003ccode\u003emaster\u003c/code\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;checkout\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;master\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;add\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;commit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;-m\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Update blog content\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;push\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;master\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;✔ Pushed changes to GitHub master.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eCommits and pushes all changes to the \u003ccode\u003emaster\u003c/code\u003e branch\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"step-6-deploy-public-folder-to-hostinger-branch\"\u003eSTEP 6: Deploy Public Folder to \u003ccode\u003ehostinger\u003c/code\u003e Branch\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;subtree\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;split\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;--prefix\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;public\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;-b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;hostinger-deploy\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;push\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;hostinger-deploy:hostinger\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;--force\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;branch\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;-D\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;hostinger-deploy\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ecwd\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehugo_root_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;✔ Deployed public/ folder to GitHub hostinger branch.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eSplits \u003ccode\u003epublic/\u003c/code\u003e into a new branch\u003c/li\u003e\n\u003cli\u003ePushes it forcefully to the \u003ccode\u003ehostinger\u003c/code\u003e branch on GitHub (used for site deployment)\u003c/li\u003e\n\u003cli\u003eDeletes the temporary \u003ccode\u003ehostinger-deploy\u003c/code\u003e branch\n\u003cul\u003e\n\u003cli\u003eThis is necessary for our webhook to recognize the changes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"issues-i-encountered\"\u003eIssues I Encountered\u003c/h2\u003e\n\u003ch3 id=\"website-styling-not-matching-local-preview\"\u003eWebsite Styling Not Matching Local Preview\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eProblem:\u003c/strong\u003e Hostinger version didn’t load custom CSS or theme\u003c/p\u003e","title":"Building My Publishing Pipeline: Obsidian → Hugo → GitHub → Hostinger"},{"content":"Pi-hole DNS Migration to Production VLAN Overview This phase of the HomeLab project documents the successful migration of the internal Pi-hole DNS server from the flat LAN network to a newly created and isolated Production VLAN. This change enhances security, improves segmentation, and prepares the environment for scalable DNS resolution across all other VLANs.\nObjectives Create and configure a dedicated Production VLAN on pfSense Migrate the Pi-hole LXC container to the new VLAN Ensure inter-VLAN DNS resolution using Pi-hole Apply proper firewall rules to restrict unnecessary access Update DHCP DNS settings across all VLANs Network Summary Component Before Migration After Migration Pi-hole Location LAN network (untagged) Production VLAN (tagged) VLAN ID - Production VLAN ID Subnet LAN Subnet Production Subnet Pi-hole IP LAN Assigned IP VLAN-assigned static IP Access Open to LAN Inter-VLAN DNS only (port 53) Steps Performed 1. Created Production VLAN in pfSense Navigated to Interfaces \u0026gt; Assignments \u0026gt; VLANs Assigned a unique VLAN tag and set the parent interface (LAN) Created new interface, enabled it, and assigned a static IPv4 gateway 2. Updated Pi-hole LXC Container Configuration Edited the container via Proxmox: pct set \u0026lt;CTID\u0026gt; -net0 name=eth0,bridge=vmbr0,tag=\u0026lt;VLAN_ID\u0026gt;,ip=\u0026lt;Pi-hole_IP\u0026gt;/24,gw=\u0026lt;VLAN_Gateway\u0026gt; ","permalink":"https://blog.tillynet.com/my-home-lab-journey/pi-hole-dns-migration-to-production-vlan/","summary":"\u003ch1 id=\"pi-hole-dns-migration-to-production-vlan\"\u003ePi-hole DNS Migration to Production VLAN\u003c/h1\u003e\n\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis phase of the HomeLab project documents the successful migration of the internal Pi-hole DNS server from the flat LAN network to a newly created and isolated \u003cstrong\u003eProduction VLAN\u003c/strong\u003e. This change enhances security, improves segmentation, and prepares the environment for scalable DNS resolution across all other VLANs.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"objectives\"\u003eObjectives\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCreate and configure a dedicated Production VLAN on pfSense\u003c/li\u003e\n\u003cli\u003eMigrate the Pi-hole LXC container to the new VLAN\u003c/li\u003e\n\u003cli\u003eEnsure inter-VLAN DNS resolution using Pi-hole\u003c/li\u003e\n\u003cli\u003eApply proper firewall rules to restrict unnecessary access\u003c/li\u003e\n\u003cli\u003eUpdate DHCP DNS settings across all VLANs\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"network-summary\"\u003eNetwork Summary\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eComponent\u003c/th\u003e\n          \u003cth\u003eBefore Migration\u003c/th\u003e\n          \u003cth\u003eAfter Migration\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ePi-hole Location\u003c/td\u003e\n          \u003ctd\u003eLAN network (untagged)\u003c/td\u003e\n          \u003ctd\u003eProduction VLAN (tagged)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eVLAN ID\u003c/td\u003e\n          \u003ctd\u003e-\u003c/td\u003e\n          \u003ctd\u003eProduction VLAN ID\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eSubnet\u003c/td\u003e\n          \u003ctd\u003eLAN Subnet\u003c/td\u003e\n          \u003ctd\u003eProduction Subnet\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ePi-hole IP\u003c/td\u003e\n          \u003ctd\u003eLAN Assigned IP\u003c/td\u003e\n          \u003ctd\u003eVLAN-assigned static IP\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eAccess\u003c/td\u003e\n          \u003ctd\u003eOpen to LAN\u003c/td\u003e\n          \u003ctd\u003eInter-VLAN DNS only (port 53)\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003chr\u003e\n\u003ch2 id=\"steps-performed\"\u003eSteps Performed\u003c/h2\u003e\n\u003ch3 id=\"1-created-production-vlan-in-pfsense\"\u003e1. Created Production VLAN in pfSense\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eNavigated to \u003cstrong\u003eInterfaces \u0026gt; Assignments \u0026gt; VLANs\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eAssigned a unique VLAN tag and set the parent interface (LAN)\u003c/li\u003e\n\u003cli\u003eCreated new interface, enabled it, and assigned a static IPv4 gateway\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-updated-pi-hole-lxc-container-configuration\"\u003e2. Updated Pi-hole LXC Container Configuration\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eEdited the container via Proxmox:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epct \u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u0026lt;CTID\u0026gt; -net0 \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eeth0,bridge\u003cspan class=\"o\"\u003e=\u003c/span\u003evmbr0,tag\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;VLAN_ID\u0026gt;,ip\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Pi-hole_IP\u0026gt;/24,gw\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;VLAN_Gateway\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Pi-hole DNS Migration to Production VLAN"},{"content":"Remote SDN Recovery \u0026amp; VLAN Isolation via VPN \u0026amp; Shell Access Overview In this project, I successfully re-established full access to my network management stack (Omada Controller, Proxmox GUI, and LXC containers) after losing access due to misconfigured VLAN trunking. The recovery was performed entirely off-site, using only a mobile device connected via an OpenVPN tunnel.\nBackground I transitioned my home lab management network to VLAN 99 to achieve full traffic isolation. In the process of re-tagging Proxmox and LXC container traffic and reconfiguring Cisco switch trunk ports, I lost access to the Omada Controller and Proxmox GUI. With no local access to the console, I needed a remote solution.\nObjective Regain access to VLAN 99 (management) Restore Omada Controller GUI and Proxmox Web GUI Ensure all traffic on management interfaces is VLAN 99 tagged Tools Used Proxmox VE 8.3 pfSense (OpenVPN Server \u0026amp; Firewall) TP-Link Omada Controller (LXC) SSH (mobile terminal access) OpenVPN (Client-to-Site) VLAN-aware Linux bridges (vmbr1) Cisco Catalyst switch (trunk config) Steps Performed Connected to VPN Tunnel 1 (LAN access)\nUsed an existing OpenVPN client-to-site tunnel connected to the LAN network Leveraged this connection as a starting point Established VPN Tunnel 2 (MGMT access)\nConfigured a new OpenVPN tunnel to reach VLAN 99 Verified routing and DNS from VPN client to MGMT subnet Accessed Proxmox Shell Remotely\nUsed SSH to access the Proxmox server shell Reviewed \u0026amp; Edited /etc/network/interfaces\nCreated a Linux Bridge vmbr1 on enp1s0 Configured vmbr1 as VLAN-aware with a VLAN 99 subinterface Reconfigured Omada Controller LXC\nSet static IP from VLAN 99 Edited /etc/pve/lxc/\u0026lt;vmid\u0026gt;.conf to tag interface correctly Updated pfSense Firewall Rules\nAllowed VPN access to Proxmox, Omada Controller, and LXCs Verified GUI access over VPN Safely Restarted Proxmox Networking Stack\nReloaded network stack without reboot to preserve SSH session Verified LXC \u0026amp; Controller Connectivity\nConfirmed restored access to Omada Controller \u0026amp; Proxmox GUI Checked VLAN 99 trunking on Cisco switch Secured VLAN 99\nBlocked all external access to VLAN 99 Allowed only OpenVPN tunnel access Tested Full Remote Management Over VPN\nOutcome Full recovery of Proxmox and Omada Controller Management services isolated to VLAN 99 VLAN trunking corrected on switch Secure remote access via OpenVPN tunnel All executed off-site using a mobile SSH client Screenshots \u0026amp; CLI Snippets (To be added) Network configuration diagrams VLAN trunking layout (Cisco Catalyst Switch) show vlan brief 1 default active 14 GUEST active 21 PRODUCTION active 99 MANAGEMENT active 666 BLACKHOLE active show interfaces trunk Port Mode Encapsulation Status Native vlan Fa0/7 on 802.1q trunking 666 Fa0/8 on 802.1q trunking 666 Gi0/2 on 802.1q trunking 666 Port Vlans allowed on trunk Fa0/7 1,14,21,99,666 Fa0/8 1,14,21,99,666 Gi0/2 1,14,21,99,666 Port Vlans allowed and active in management domain Fa0/7 1,14,21,99,666 Fa0/8 1,14,21,99,666 Gi0/2 1,14,21,99,666 Proxmox Interfaces cat /etc/network/interfaces auto lo iface lo inet loopback iface enp4s0 inet manual #Proxmox Management iface enp1s0 inet manual #MGMT Bridge Link iface enx60189502f716 inet manual iface enp2s0 inet manual #PfSense LAN iface enp3s0 inet manual #PfSense WAN auto vmbr0 iface vmbr0 inet static address fallback.management.ip/24 bridge-ports enp4s0 bridge-stp off bridge-fd 0 bridge-vlan-aware yes bridge-vids 2-4094 dns-nameservers 1.1.1.1 8.8.8.8 #Native Proxmox Management auto vmbr1 iface vmbr1 inet manual bridge-ports enp1s0 bridge-stp off bridge-fd 0 bridge-vlan-aware yes bridge-vids 2-4094 #MGMT Bridge auto vmbr1.99 iface vmbr1.99 inet static address management.ip/24 gateway management.gateway.ip #Proxmox MGMT 99 source /etc/network/interfaces.d/* Omada Controller Network Config cat /etc/network/interfaces #TP-Link Omada Controller (Ubuntu 22.04) arch: amd64 cores: 1 features: nesting=1 hostname: omada memory: 2304 net0:name=eth0,bridge=vmbr1,firewall=1,gw=management.gateway.ip,hwaddr=macaddress,ip=management.ip/24,tag=99,type=veth onboot: 1 ostype: ubuntu rootfs: local-lvm:vm-200-disk-0,size=8G startup: order=3,up=30,down=120 swap: 512 unprivileged: 1 openvpn status Lessons Learned Always test VLAN changes with fallback access Proxmox shell is essential for remote recovery OpenVPN enables secure remote SDN administration Avoid dual gateway configurations on bridges Future Improvements Add fallback management IP on separate VLAN Setup out-of-band access (serial/IPMI) Automate Proxmox network config backups Resume Bullet Performed live remote SDN infrastructure recovery using OpenVPN and SSH from a mobile device; reconfigured VLAN-tagged Proxmox bridges, updated pfSense firewall rules, and restored access to critical network services including Omada Controller and LXC containers on an isolated management VLAN. ","permalink":"https://blog.tillynet.com/my-home-lab-journey/remote-sdn-recovery-vlan-isolation-via-vpn-shell-access/","summary":"\u003ch2 id=\"remote-sdn-recovery--vlan-isolation-via-vpn--shell-access\"\u003eRemote SDN Recovery \u0026amp; VLAN Isolation via VPN \u0026amp; Shell Access\u003c/h2\u003e\n\u003ch3 id=\"overview\"\u003eOverview\u003c/h3\u003e\n\u003cp\u003eIn this project, I successfully re-established full access to my network management stack (Omada Controller, Proxmox GUI, and LXC containers) after losing access due to misconfigured VLAN trunking. The recovery was performed entirely \u003cstrong\u003eoff-site\u003c/strong\u003e, using only a mobile device connected via an \u003cstrong\u003eOpenVPN tunnel\u003c/strong\u003e.\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"background\"\u003eBackground\u003c/h3\u003e\n\u003cp\u003eI transitioned my home lab management network to VLAN 99 to achieve full traffic isolation. In the process of re-tagging Proxmox and LXC container traffic and reconfiguring Cisco switch trunk ports, I lost access to the Omada Controller and Proxmox GUI. With no local access to the console, I needed a remote solution.\u003c/p\u003e","title":"Remote SDN Recovery \u0026 VLAN Isolation via VPN \u0026 Shell Access"},{"content":"02 - Migrating to a Dedicated Management VLAN (VLAN 99) This phase documents the migration of all core management infrastructure to an isolated VLAN (VLAN 99) for improved security, network segmentation, and long-term scalability. This included Proxmox GUI access, Omada Controller LXC, and strict firewall rules enforced via pfSense.\nGoals Remove critical services from default/native VLAN Assign a dedicated, isolated VLAN (VLAN 99) for: Proxmox management GUI Omada Controller (LXC) Trunk management VLAN through switch to Proxmox Implement firewall rules to allow remote admin access only Preserve service availability during transition Pre-Migration Topology Component Network VLAN Interface Description Proxmox Host LAN VLAN 1 vmbr0 Static IP via native VLAN Omada Controller LAN VLAN 1 vmbr0 LXC container, web GUI on port 8043 Pi-hole LAN VLAN 1 vmbr0 DNS LXC VPN Tunnel LAN VLAN 1 pfSense Remote client-to-site access Post-Migration Topology Component Network VLAN Interface Description Proxmox Host Management VLAN 99 vmbr1.99 Tagged IP for GUI access via vmbr1 Omada Controller Management VLAN 99 vmbr1 (tagged) LXC container with VLAN tag 99 Pi-hole LAN VLAN 1 vmbr0 LXC container Trunk Port (Switch) Trunked Port 1,99,14 enp1s0 Connected to VLAN-aware bridge vmbr1 VPN Tunnel Routed to MGMT VLAN 99 pfSense Allows external admin access to VLAN 99 Migration Steps 1. Create VLAN 99 in pfSense Interfaces \u0026gt; Assignments \u0026gt; VLANs Created VLAN 99 on the LAN parent interface Assigned it as a new interface and renamed it to MGMT Enabled the interface and set a static IP (management subnet) 2. Configure Proxmox Bridge for VLAN Tagging Created a new VLAN-aware bridge and subinterface in /etc/network/interfaces:\nauto vmbr1 iface vmbr1 inet manual bridge-ports enp1s0 bridge-stp off bridge-fd 0 bridge-vlan-aware yes bridge-vids 2-4094 auto vmbr1.99 iface vmbr1.99 inet static address \u0026lt;management_ip\u0026gt;/24 gateway \u0026lt;management_gateway\u0026gt; ","permalink":"https://blog.tillynet.com/my-home-lab-journey/creating-network-management-isolation/","summary":"\u003ch1 id=\"02---migrating-to-a-dedicated-management-vlan-vlan-99\"\u003e02 - Migrating to a Dedicated Management VLAN (VLAN 99)\u003c/h1\u003e\n\u003cp\u003eThis phase documents the migration of all core management infrastructure to an isolated VLAN (VLAN 99) for improved security, network segmentation, and long-term scalability. This included Proxmox GUI access, Omada Controller LXC, and strict firewall rules enforced via pfSense.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"goals\"\u003eGoals\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRemove critical services from default/native VLAN\u003c/li\u003e\n\u003cli\u003eAssign a dedicated, isolated VLAN (VLAN 99) for:\n\u003cul\u003e\n\u003cli\u003eProxmox management GUI\u003c/li\u003e\n\u003cli\u003eOmada Controller (LXC)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTrunk management VLAN through switch to Proxmox\u003c/li\u003e\n\u003cli\u003eImplement firewall rules to allow remote admin access only\u003c/li\u003e\n\u003cli\u003ePreserve service availability during transition\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"pre-migration-topology\"\u003ePre-Migration Topology\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eComponent\u003c/th\u003e\n          \u003cth\u003eNetwork\u003c/th\u003e\n          \u003cth\u003eVLAN\u003c/th\u003e\n          \u003cth\u003eInterface\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eProxmox Host\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLAN\u003c/td\u003e\n          \u003ctd\u003eVLAN 1\u003c/td\u003e\n          \u003ctd\u003evmbr0\u003c/td\u003e\n          \u003ctd\u003eStatic IP via native VLAN\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eOmada Controller\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLAN\u003c/td\u003e\n          \u003ctd\u003eVLAN 1\u003c/td\u003e\n          \u003ctd\u003evmbr0\u003c/td\u003e\n          \u003ctd\u003eLXC container, web GUI on port 8043\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003ePi-hole\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLAN\u003c/td\u003e\n          \u003ctd\u003eVLAN 1\u003c/td\u003e\n          \u003ctd\u003evmbr0\u003c/td\u003e\n          \u003ctd\u003eDNS LXC\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eVPN Tunnel\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLAN\u003c/td\u003e\n          \u003ctd\u003eVLAN 1\u003c/td\u003e\n          \u003ctd\u003epfSense\u003c/td\u003e\n          \u003ctd\u003eRemote client-to-site access\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003chr\u003e\n\u003ch2 id=\"post-migration-topology\"\u003ePost-Migration Topology\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eComponent\u003c/th\u003e\n          \u003cth\u003eNetwork\u003c/th\u003e\n          \u003cth\u003eVLAN\u003c/th\u003e\n          \u003cth\u003eInterface\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eProxmox Host\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eManagement\u003c/td\u003e\n          \u003ctd\u003eVLAN 99\u003c/td\u003e\n          \u003ctd\u003evmbr1.99\u003c/td\u003e\n          \u003ctd\u003eTagged IP for GUI access via \u003ccode\u003evmbr1\u003c/code\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eOmada Controller\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eManagement\u003c/td\u003e\n          \u003ctd\u003eVLAN 99\u003c/td\u003e\n          \u003ctd\u003evmbr1 (tagged)\u003c/td\u003e\n          \u003ctd\u003eLXC container with VLAN tag 99\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003ePi-hole\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLAN\u003c/td\u003e\n          \u003ctd\u003eVLAN 1\u003c/td\u003e\n          \u003ctd\u003evmbr0\u003c/td\u003e\n          \u003ctd\u003eLXC container\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eTrunk Port (Switch)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eTrunked Port\u003c/td\u003e\n          \u003ctd\u003e1,99,14\u003c/td\u003e\n          \u003ctd\u003eenp1s0\u003c/td\u003e\n          \u003ctd\u003eConnected to VLAN-aware bridge \u003ccode\u003evmbr1\u003c/code\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eVPN Tunnel\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eRouted to MGMT\u003c/td\u003e\n          \u003ctd\u003eVLAN 99\u003c/td\u003e\n          \u003ctd\u003epfSense\u003c/td\u003e\n          \u003ctd\u003eAllows external admin access to VLAN 99\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003chr\u003e\n\u003ch2 id=\"migration-steps\"\u003eMigration Steps\u003c/h2\u003e\n\u003ch3 id=\"1-create-vlan-99-in-pfsense\"\u003e1. Create VLAN 99 in pfSense\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eInterfaces \u0026gt; Assignments \u0026gt; VLANs\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eCreated VLAN 99 on the LAN parent interface\u003c/li\u003e\n\u003cli\u003eAssigned it as a new interface and renamed it to \u003ccode\u003eMGMT\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eEnabled the interface and set a static IP (management subnet)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-configure-proxmox-bridge-for-vlan-tagging\"\u003e2. Configure Proxmox Bridge for VLAN Tagging\u003c/h3\u003e\n\u003cp\u003eCreated a new VLAN-aware bridge and subinterface in \u003ccode\u003e/etc/network/interfaces\u003c/code\u003e:\u003c/p\u003e","title":"Creating Network Management Isolation"},{"content":"HomeLab: Initial Network Setup This project documents the first working phase of my home network infrastructure built on top of Proxmox, using pfSense as a virtual firewall/router and LXC containers to host internal services. The design lays the foundation for a scalable, secure, and isolated home lab environment.\nOverview Hypervisor: Proxmox VE running on Protectli Vault (Intel J6412, 4 NICs) Router/Firewall: pfSense VM Internal Services: Pi-hole (LXC) – local DNS + ad-blocking Omada Controller (LXC) – TP-Link AP management LAN Devices: Proxmox host, personal workstation, AP, switch Guest Devices: IoT \u0026amp; roommate devices on isolated VLAN 14 Infrastructure at a Glance Component Description pfSense VM with two PCI-passthrough NICs (WAN + LAN) vmbr0 Bridge for LAN (Proxmox + LXCs) vmbr1 Reserved for future VLAN tagging (e.g., mgmt) Pi-hole LXC container for DNS (on LAN) Omada Ctrl LXC container managing TP-Link EAP670 AP Cisco Switch Access switch trunking VLANs to Proxmox/AP Guest VLAN 14 WiFi-only VLAN for roommate \u0026amp; IoT devices Setup Timeline Phase 1 – Core Infrastructure Flashed Proxmox onto Protectli Vault Created pfSense VM with 2 passthrough NICs: WAN: connected to ISP modem LAN: connected to Cisco switch (trunk-ready) Configured vmbr0 as LAN bridge in Proxmox Gave Proxmox host static IP on the LAN network Phase 2 – Internal Services Provisioned LXC container for Pi-hole Static IP assigned Configured upstream DNS servers (e.g., Cloudflare) Provisioned LXC container for Omada Controller Used to manage TP-Link EAP670 AP Served on LAN via Omada web GUI (port 8043) Phase 3 – Wireless \u0026amp; Guest VLAN Set up VLAN 14 in pfSense (Guest Network) Trunked VLANs through switch port to Omada AP Created isolated wireless SSID mapped to VLAN 14 Configured firewall rules in pfSense: Guests can access WAN only Blocked access to LAN and Pi-hole Verified DHCP lease and internet access for guests Observed isolated traffic from personal network Security Practices Created distinct VLANs for guest vs personal network Isolated Pi-hole to LAN access only Disabled inter-VLAN routing from Guest → LAN Assigned firewall rules by interface in pfSense Reserved management services for trusted VLAN only To-Do / Next Steps Create VLAN 99 for network management Move Proxmox GUI and Omada Controller to VLAN 99 Add remote access via OpenVPN (completed later) Diagram full topology and backup strategy Network Diagram Will include:\nProxmox bridges → pfSense VM → Switch trunk → AP → VLAN segmentation\nLessons Learned Always reserve a static fallback IP for management pfSense is extremely powerful when paired with LXC containers VLANs and firewall rules are critical to proper isolation Omada Controller offers enterprise-like wireless management Resume Bullet (from this phase) Deployed full virtual home network lab with pfSense firewall, VLAN isolation, and internal services (DNS, WiFi controller) using Proxmox and LXC containers; implemented guest network segregation and trunked VLANs across Cisco infrastructure. ","permalink":"https://blog.tillynet.com/my-home-lab-journey/the-big-bang-how-it-all-began/","summary":"\u003ch1 id=\"homelab-initial-network-setup\"\u003eHomeLab: Initial Network Setup\u003c/h1\u003e\n\u003cp\u003eThis project documents the first working phase of my home network infrastructure built on top of Proxmox, using pfSense as a virtual firewall/router and LXC containers to host internal services. The design lays the foundation for a scalable, secure, and isolated home lab environment.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eHypervisor:\u003c/strong\u003e Proxmox VE running on Protectli Vault (Intel J6412, 4 NICs)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRouter/Firewall:\u003c/strong\u003e pfSense VM\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInternal Services:\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003ePi-hole (LXC) – local DNS + ad-blocking\u003c/li\u003e\n\u003cli\u003eOmada Controller (LXC) – TP-Link AP management\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLAN Devices:\u003c/strong\u003e Proxmox host, personal workstation, AP, switch\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGuest Devices:\u003c/strong\u003e IoT \u0026amp; roommate devices on isolated VLAN 14\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"infrastructure-at-a-glance\"\u003eInfrastructure at a Glance\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eComponent\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003epfSense\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eVM with two PCI-passthrough NICs (WAN + LAN)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003evmbr0\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eBridge for LAN (Proxmox + LXCs)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003evmbr1\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eReserved for future VLAN tagging (e.g., mgmt)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003ePi-hole\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLXC container for DNS (on LAN)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eOmada Ctrl\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLXC container managing TP-Link EAP670 AP\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eCisco Switch\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eAccess switch trunking VLANs to Proxmox/AP\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eGuest VLAN 14\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eWiFi-only VLAN for roommate \u0026amp; IoT devices\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003chr\u003e\n\u003ch2 id=\"setup-timeline\"\u003eSetup Timeline\u003c/h2\u003e\n\u003ch3 id=\"phase-1--core-infrastructure\"\u003ePhase 1 – Core Infrastructure\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eFlashed Proxmox onto Protectli Vault\u003c/li\u003e\n\u003cli\u003eCreated pfSense VM with 2 passthrough NICs:\n\u003cul\u003e\n\u003cli\u003eWAN: connected to ISP modem\u003c/li\u003e\n\u003cli\u003eLAN: connected to Cisco switch (trunk-ready)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigured \u003ccode\u003evmbr0\u003c/code\u003e as LAN bridge in Proxmox\u003c/li\u003e\n\u003cli\u003eGave Proxmox host static IP on the LAN network\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"phase-2--internal-services\"\u003ePhase 2 – Internal Services\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eProvisioned LXC container for Pi-hole\n\u003cul\u003e\n\u003cli\u003eStatic IP assigned\u003c/li\u003e\n\u003cli\u003eConfigured upstream DNS servers (e.g., Cloudflare)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eProvisioned LXC container for Omada Controller\n\u003cul\u003e\n\u003cli\u003eUsed to manage TP-Link EAP670 AP\u003c/li\u003e\n\u003cli\u003eServed on LAN via Omada web GUI (port 8043)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"phase-3--wireless--guest-vlan\"\u003ePhase 3 – Wireless \u0026amp; Guest VLAN\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSet up VLAN 14 in pfSense (Guest Network)\u003c/li\u003e\n\u003cli\u003eTrunked VLANs through switch port to Omada AP\u003c/li\u003e\n\u003cli\u003eCreated isolated wireless SSID mapped to VLAN 14\u003c/li\u003e\n\u003cli\u003eConfigured firewall rules in pfSense:\n\u003cul\u003e\n\u003cli\u003eGuests can access WAN only\u003c/li\u003e\n\u003cli\u003eBlocked access to LAN and Pi-hole\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eVerified DHCP lease and internet access for guests\u003c/li\u003e\n\u003cli\u003eObserved isolated traffic from personal network\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"security-practices\"\u003eSecurity Practices\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCreated distinct VLANs for guest vs personal network\u003c/li\u003e\n\u003cli\u003eIsolated Pi-hole to LAN access only\u003c/li\u003e\n\u003cli\u003eDisabled inter-VLAN routing from Guest → LAN\u003c/li\u003e\n\u003cli\u003eAssigned firewall rules by interface in pfSense\u003c/li\u003e\n\u003cli\u003eReserved management services for trusted VLAN only\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"to-do--next-steps\"\u003eTo-Do / Next Steps\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCreate VLAN 99 for network management\u003c/li\u003e\n\u003cli\u003eMove Proxmox GUI and Omada Controller to VLAN 99\u003c/li\u003e\n\u003cli\u003eAdd remote access via OpenVPN (completed later)\u003c/li\u003e\n\u003cli\u003eDiagram full topology and backup strategy\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"network-diagram\"\u003eNetwork Diagram\u003c/h2\u003e\n\u003cp\u003e\u003cimg alt=\"Image\" loading=\"lazy\" src=\"/images/TillyNet_OG.drawio.png\"\u003e\u003c/p\u003e","title":"The Big Bang (How it All Began)"}]